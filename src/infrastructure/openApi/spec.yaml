openapi: 3.0.3
info:
  title: Enara Challenge Project - Time Tracker App
  version: '1.0'
  description: Enara Challenge Implementation (Time Tracker App)
servers:
  - url: '/api/v1/tracker'
paths:
  /{project}/start:
    post:
      tags:
        - 'Tracker'
      summary: start a project execution
      parameters:
        - in: path
          name: project
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
              example:
                message: 'started new segment for project my-first-project'

        '400':
          description: bad request, missing project in url params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Request Validation Failed: Missing project name'
                code: 400
                status: 400
                internalCode: 'MISSING_PROJECT_NAME'
                details:
                  message: 'Request Validation Failed: Missing project name'

        '422':
          description: Trying to start a project with pending segment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Trying to start a project with pending segment'
                code: 422
                status: 422
                internalCode: 'START_PENDING_PROJECT'
                details:
                  project: 'my-first-project'

  /{project}/stop:
    post:
      tags:
        - 'Tracker'
      summary: stop a project segment execution
      parameters:
        - in: path
          name: project
          schema:
            type: string
          required: true
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopResponse'
              example:
                message: 'stopped segment for project my-first-project'
                duration: '5 minutes'

        '400':
          description: bad request, missing project in url params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Request Validation Failed: Missing project name'
                code: 400
                status: 400
                internalCode: 'MISSING_PROJECT_NAME'
                details:
                  message: 'Request Validation Failed: Missing project name'

        '404':
          description: project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Project not found'
                code: 404
                status: 404
                internalCode: 'PROJECT_NOT_FOUND'
                details:
                  project: 'unknown-project'

        '422':
          description: Trying to stop a project with finished segment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Trying to stop a project with finished segment'
                code: 422
                status: 422
                internalCode: 'STOP_FINISHED_SEGMENT_IN_PROJECT'
                details:
                  project: 'my-first-project'

  /report:
    get:
      tags:
        - 'Reports'
      summary: get full report of all project with their duration
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportResponse'
              example:
                [
                  { 'name': 'my-first-project', 'duration': '5 minutes' },
                  { 'name': 'my-second-project', 'duration': '365 minutes' },
                ]

  /{project}/report:
    get:
      tags:
        - 'Reports'
      summary: get report of specific project with their duration and finished segments
      parameters:
        - in: path
          name: project
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportByProjectResponse'
              example:
                name: 'my-first-project'
                totalDuration: '10 minutes'
                segments: ['5 minutes', '5 minutes']

        '404':
          description: project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Project not found'
                code: 404
                status: 404
                internalCode: 'PROJECT_NOT_FOUND'
                details:
                  project: 'unknown-project'

components:
  schemas:
    StopResponse:
      properties:
        message:
          type: string
        duration:
          type: string
    ReportResponse:
      properties:
        name:
          type: string
        duration:
          type: string
    ReportByProjectResponse:
      properties:
        name:
          type: string
        totalDuration:
          type: string
        segments:
          type: array
          items:
            type: string
    Error:
      properties:
        message:
          type: string
        code:
          type: number
        status:
          type: number
        internalCode:
          type: string
        details:
          type: object
